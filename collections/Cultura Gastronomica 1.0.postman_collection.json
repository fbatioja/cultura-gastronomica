{
	"info": {
		"_postman_id": "94272a71-0512-4633-9dcc-9015372bef11",
		"name": "Cultura Gastronomica 1.0",
		"description": "La cultura, la historia, el clima, entre otros, son factores que han influido en la forma como los pueblos en el mundo perciben, preparan y disfrutan la comida. Esta evolución ha llevado a que existan tipos de comida característicos de un país o una región.\n\nEste API permita a las personas interesadas, obtener y actualizar la información sobre las cocinas del mundo.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Login como admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"admin\",\r\n   \"password\": \"admin\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login como supervisor (Eliminación de todos los recursos)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"supervisor\",\r\n   \"password\": \"supervisor\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login como manager (Escritura y actualización)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"manager\",\r\n   \"password\": \"manager\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login como staff (Lectura de todos los recursos)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"staff\",\r\n   \"password\": \"staff\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login como user (Lectura solo de culture)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", data.token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"username\": \"user\",\r\n   \"password\": \"user\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Estrellas",
			"item": [
				{
					"name": "Crear restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"restaurant_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Cantabria\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						},
						"description": "Permite la creación de un restaurant. Se recibe el nombre y la ciudad del restaurant. Una vez creado el restaurant, se retorna el ID del restaurant creado, el nombre y la ciudad"
					},
					"response": [
						{
							"name": "Crear restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Cantabria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"name\": \"Cenador de Amós\",\n    \"city\": \"Cantabria\",\n    \"id\": \"315ace12-30b0-4e4b-852b-cf35dc9b5a98\"\n}"
						}
					]
				},
				{
					"name": "Crear estrella michelin a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"star_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"stars"
							]
						},
						"description": "Permite crear una estrella michelin a un restaurante. El Api retorma el restaurante y la estrella creada"
					},
					"response": [
						{
							"name": "Crear estrella michelin a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"stars"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"consecutionDate\": \"1995-08-24\",\r\n    \"restaurant\": {\r\n        \"id\": \"591abeed-63c5-4ef9-b735-9bec88e583ce\",\r\n        \"name\": \"Cenador de Amós\",\r\n        \"city\": \"Cantabria\"\r\n    },\r\n    \"id\": \"2bd3ffeb-67b4-4442-8532-21c45224d8a6\"\r\n}"
						}
					]
				},
				{
					"name": "Crear segunda estrella michelin a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"star_id2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"stars"
							]
						},
						"description": "Permite crear una estrella michelin a un restaurante. El Api retorma el restaurante y la estrella creada"
					},
					"response": [
						{
							"name": "Crear segunda estrella michelin a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"stars"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"consecutionDate\": \"1995-08-24\",\r\n    \"restaurant\": {\r\n        \"id\": \"591abeed-63c5-4ef9-b735-9bec88e583ce\",\r\n        \"name\": \"Cenador de Amós\",\r\n        \"city\": \"Cantabria\"\r\n    },\r\n    \"id\": \"2bd3ffeb-67b4-4442-8532-21c45224d8a6\"\r\n}"
						}
					]
				},
				{
					"name": "Crear tercera estrella michelin a un restaurante Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"star_id3\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"stars"
							]
						},
						"description": "Permite crear una estrella michelin a un restaurante. El Api retorma el restaurante y la estrella creada"
					},
					"response": [
						{
							"name": "Crear tercera estrella michelin a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"stars"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"consecutionDate\": \"1995-08-24\",\r\n    \"restaurant\": {\r\n        \"id\": \"591abeed-63c5-4ef9-b735-9bec88e583ce\",\r\n        \"name\": \"Cenador de Amós\",\r\n        \"city\": \"Cantabria\"\r\n    },\r\n    \"id\": \"2bd3ffeb-67b4-4442-8532-21c45224d8a6\"\r\n}"
						}
					]
				},
				{
					"name": "Crear cuarta michelin a un restaurante Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"   pm.response.to.have.status(412);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante ya tiene 3 estrellas michelin\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"stars"
							]
						},
						"description": "Permite crear una estrella michelin a un restaurante. El Api retorma el restaurante y la estrella creada"
					},
					"response": [
						{
							"name": "Crear cuarta estrella michelin a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"stars"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 412,\r\n    \"message\": \"El restaurante ya tiene 3 estrellas michelin\"\r\n}"
						}
					]
				},
				{
					"name": "Crear estrella michelin a restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/stars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000",
								"stars"
							]
						},
						"description": "Envia la solicitud de creación de estrella michelin a un restaurante que no existe en el sistema. Se retorna el código de error 404 indicando que no existe el restaurante"
					},
					"response": [
						{
							"name": "Crear estrella michelin a restaurante que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/stars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000",
										"stars"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualizar estrella michelin",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"consecutionDate\": \"2002-08-24\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars/{{star_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"stars",
								"{{star_id}}"
							]
						},
						"description": "Permite actualizar la fecha de consecución de una estrella michelin asociada a un restaurante. Retorna el código 200 para indicar que se realiza la actualización satisfactoriamente y se retorna el restaurante y la estrella actualizada"
					},
					"response": [
						{
							"name": "Actualizar estrella michelin de un restaurante",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars/{{star_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"stars",
										"{{star_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"fe4bdd22-86dc-414c-97c1-4c444ca82d17\",\n    \"consecutionDate\": \"2002-08-24\"\n}"
						}
					]
				},
				{
					"name": "Actualizar estrella michelin de un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"consecutionDate\": \"2002-08-24\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/stars/{{star_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000",
								"stars",
								"{{star_id}}"
							]
						},
						"description": "StartFragment\n\nEnvia la solicitud de actualización de estrella michelin a un restaurante que no existe en el sistema. Se retorna el código de error 404 indicando que no existe el restaurante\n\nEndFragment"
					},
					"response": [
						{
							"name": "Actualizar estrella michelin de un restaurante que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"consecutionDate\": \"2002-08-24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/stars/{{star_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000",
										"stars",
										"{{star_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualizar estrella michelin que no existe a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La estrella con el id dado no fue encontrada\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"consecutionDate\": \"2002-08-24\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"stars",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "StartFragment\n\nEnvia la solicitud de actualizacón de estrella michelin que no existe a un restaurante. Se retorna el código de error 404 indicando que no existe la estrella michelin\n\nEndFragment"
					},
					"response": [
						{
							"name": "Actualizar estrella michelin que no existe a un restaurante",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"consecutionDate\": \"2002-08-24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"stars",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La estrella con el id dado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Obtener estrellas michelin de un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of museums > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"stars"
							]
						},
						"description": "Permite obtener el restaurante con la lista de estrellas michelin relacionadas."
					},
					"response": [
						{
							"name": "Obtener estrellas michelin de un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"stars"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\": \"e79a1bfe-7d14-493e-b725-8af1eb56d7dd\",\r\n        \"consecutionDate\": \"1995-08-24T05:00:00.000Z\"\r\n    },\r\n    {\r\n        \"id\": \"fa86838b-29b9-4ef7-87be-656f3ff8ed9d\",\r\n        \"consecutionDate\": \"1995-08-24T05:00:00.000Z\"\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "Obtener estrellas michelin de un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/stars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000",
								"stars"
							]
						},
						"description": "StartFragment\n\nEnvia la solicitud de consulta de estrella michelin de un restaurante que no existe en el sistema. Se retorna el código de error 404 indicando que no existe el restaurante\n\nEndFragment"
					},
					"response": [
						{
							"name": "Obtener estrellas michelin de un restaurante que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/stars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000",
										"stars"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Crear restaurante Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"restaurant_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Cantabria\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						},
						"description": "Permite la creación de un restaurant. Se recibe el nombre y la ciudad del restaurant. Una vez creado el restaurant, se retorna el ID del restaurant creado, el nombre y la ciudad"
					},
					"response": [
						{
							"name": "Crear restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Cantabria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"name\": \"Cenador de Amós\",\n    \"city\": \"Cantabria\",\n    \"id\": \"315ace12-30b0-4e4b-852b-cf35dc9b5a98\"\n}"
						}
					]
				},
				{
					"name": "Crear estrella michelin a un restaurante Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"star_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"stars"
							]
						},
						"description": "Permite crear una estrella michelin a un restaurante. El Api retorma el restaurante y la estrella creada"
					},
					"response": [
						{
							"name": "Crear estrella michelin a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"consecutionDate\": \"1995-08-24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"stars"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"consecutionDate\": \"1995-08-24\",\r\n    \"restaurant\": {\r\n        \"id\": \"591abeed-63c5-4ef9-b735-9bec88e583ce\",\r\n        \"name\": \"Cenador de Amós\",\r\n        \"city\": \"Cantabria\"\r\n    },\r\n    \"id\": \"2bd3ffeb-67b4-4442-8532-21c45224d8a6\"\r\n}"
						}
					]
				},
				{
					"name": "Borrar una estrella de un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars/{{star_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"stars",
								"{{star_id}}"
							]
						},
						"description": "Envia la solicitud para borrar un restaurant del sistema. Se retorna el código de error 204 indicando la eliminación satisfactoria"
					},
					"response": [
						{
							"name": "Borrar una estrella de un restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar una estrella que no existe de un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La estrella con el id dado no fue encontrada\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"stars",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Envia la solicitud para borrar un restaurant del sistema. Se retorna el código de error 204 indicando la eliminación satisfactoria"
					},
					"response": [
						{
							"name": "Borrar una estrella que no existe de un restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/stars/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"stars",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La estrella con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Borrar una estrella de un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/stars/{{star_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000",
								"stars",
								"{{star_id}}"
							]
						},
						"description": "Envia la solicitud para borrar un restaurant del sistema. Se retorna el código de error 204 indicando la eliminación satisfactoria"
					},
					"response": [
						{
							"name": "Borrar una estrella de un restaurante que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/stars/{{star_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000",
										"stars",
										"{{star_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no fue encontrado\"\n}"
						}
					]
				}
			],
			"description": "Son las estrellas michelin que pueden tener los restaurantes. Sin los restaurantes no existen las estrellas michelin",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Restaurantes",
			"item": [
				{
					"name": "Crear restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"restaurant_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Cantabria\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						},
						"description": "Permite la creación de un restaurant. Se recibe el nombre y la ciudad del restaurant. Una vez creado el restaurant, se retorna el ID del restaurant creado, el nombre y la ciudad"
					},
					"response": [
						{
							"name": "Crear restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Cantabria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"name\": \"Cenador de Amós\",\n    \"city\": \"Cantabria\",\n    \"id\": \"315ace12-30b0-4e4b-852b-cf35dc9b5a98\"\n}"
						}
					]
				},
				{
					"name": "Obtener todos los restaurantes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of museums > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						},
						"description": "Lista todos los restaurants registrados en el sistema. Por cada restaurant se retorna su infornación básica que es ID, Nombre y Ciudad asi como la información relacionada con las estrellas michelin, la cultura gastronomica y el pais."
					},
					"response": [
						{
							"name": "Obtener todos los restaurantes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\r\n   {\r\n        \"id\": \"c6d445a2-91d8-4b42-b642-bfcd0e3ebf83\",\r\n        \"name\": \"Cenador de Amós\",\r\n        \"city\": \"Cantabria\",\r\n        \"countries\": {\r\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\r\n            \"name\": \"España\"\r\n        },\r\n        \"stars\": [\r\n            {\r\n               \"id\": \"ab9g0c39-e498-4244-8967-6cb96f7ed50f\",\r\n               \"consecutionDate\": \"1995-08-24\"\r\n            },\r\n            {\r\n               \"id\": \"ab9g0c39-e498-4244-8967-6cb96f7a958d\",\r\n               \"consecutionDate\": \"2022-03-02\"\r\n            }\r\n       ],\r\n       \"cultures\": [\r\n            {\r\n                \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\r\n                \"name\": \"Mediterranea\",\r\n                \"description\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\"\r\n            }\r\n       ]\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "Obtener un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						},
						"description": "StartFragment\n\nPor cada restaurant se retorna su infornación básica que es ID, Nombre y Ciudad asi como la información relacionada con las estrellas michelin, la cultura gastronomica y el país.\n\nEndFragment"
					},
					"response": [
						{
							"name": "Obtener un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"60a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Cenador de Amós\",\n    \"city\": \"Cantabria\",\n    \"country\": {\n        \"id\": \"48a9ab90-1276-11ed-861d-0242ac120582\",\n        \"name\": \"España\"\n    },\n    \"stars\": [\n        {\n            \"id\": \"48a9ab90-1276-11ed-861d-0242ac120105\",\n            \"consecutionDate\": \"1995-08-24\"\n        },\n        {\n            \"id\": \"daa9ab90-1276-11ed-861d-0242ac120002\",\n            \"consecutionDate\": \"2022-03-02\"\n        }\n    ],\n    \"cultures\": [\n        {\n            \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n            \"name\": \"Mediterranea\",\n            \"description\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Obtener un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Envia la solicitud de consulta de un restaurant que no existe en el sistema. Se retorna el código de error 404 indicando que no existe el restaurant"
					},
					"response": [
						{
							"name": "Obtener un restaurante que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The restaurant with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Actualizar un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Madrid\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						},
						"description": "Envia la solicitud de actualización de un restaurant. Permite modificar uno o más datos del restaurant. Es indispensable enviar el id del restaurant a modificar.\n\nSe retorna el código de error 200 indicando la actualización satisfactoria."
					},
					"response": [
						{
							"name": "Actualizar un restaurante",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Madrid\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"c6d445a2-91d8-4b42-b642-bfcd0e3ebf83\",\n    \"name\": \"Cenador de Amós\",\n    \"city\": \"Madrid\"\n}"
						}
					]
				},
				{
					"name": "Actualizar un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Madrid\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Envia la solicitud de actualización de un restaurant que no existe en el sistema. Se retorna el código de error 404 indicando que no existe el restaurant"
					},
					"response": [
						{
							"name": "Actualizar un restaurante que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Madrid\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The restaurant with the given id was not found\"\n}"
						}
					]
				},
				{
					"name": "Borrar un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}"
							]
						},
						"description": "Envia la solicitud para borrar un restaurant del sistema. Se retorna el código de error 204 indicando la eliminación satisfactoria"
					},
					"response": [
						{
							"name": "Borrar un restaurante",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Envia la solicitud de eliminación de un restaurant que no existe en el sistema. Se retorna el código de error 404 indicando que no existe el restaurant"
					},
					"response": [
						{
							"name": "Borrar un restaurante que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The restaurant with the given id was not found\"\n}"
						}
					]
				}
			],
			"description": "La cultura gastronómica tiene un listado de restaurantes reconocidos especializados en diferentes tipos de comida. Cada restaurante tiene un nombre, la ciudad y el país donde se encuentra, y el número de estrellas Michelin (si las tiene) junto con fecha de consecución. También se debe considerar que existen restaurantes que comparten más de una cultura gastronómica",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Restaurantes-Paises",
			"item": [
				{
					"name": "Crear restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"restaurant_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Cantabria\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						},
						"description": "Permite la creación de un restaurant. Se recibe el nombre y la ciudad del restaurant. Una vez creado el restaurant, se retorna el ID del restaurant creado, el nombre y la ciudad"
					},
					"response": [
						{
							"name": "Crear restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Cantabria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"name\": \"Cenador de Amós\",\n    \"city\": \"Cantabria\",\n    \"id\": \"315ace12-30b0-4e4b-852b-cf35dc9b5a98\"\n}"
						}
					]
				},
				{
					"name": "Crear un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"country_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"España\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						},
						"description": "Esta petición crea un nuevo pais."
					},
					"response": [
						{
							"name": "Crear un pais",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"España\"\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"España\"\n}"
						}
					]
				},
				{
					"name": "Agregar un pais que no existe a un restaurantr",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El país con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"countries",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Envia la solicitud para asociat un país que no existe en el sistema a un restaurant que si existe. Se retorna el código de error 404 indicando que no existe el país"
					},
					"response": [
						{
							"name": "Agregar un pais que no existe a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"countries",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El país con el id dado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Crear un pais 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"country_id2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"Japon\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						},
						"description": "Esta petición crea un nuevo pais."
					},
					"response": [
						{
							"name": "Crear un pais 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"Japon\"\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"España\"\n}"
						}
					]
				},
				{
					"name": "Obtener pais de un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"countries"
							]
						},
						"description": "Permite obtener el pais asociado al restaurant. Se retorna la información básica del restaurant y del país. El código de respuesta 200 indica que se ha obtenido la información satisfactoriamente"
					},
					"response": [
						{
							"name": "Obtener pais de un restaurante",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"countries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\":1,\r\n    \"nombre\": \"España\"\r\n}"
						}
					]
				},
				{
					"name": "Obtener un pais de un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000",
								"countries"
							]
						},
						"description": "Envia la solicitud de consulta de un país asociado a un restaurant que no existe en el sistema. Se retorna el código de error 404 indicando que no existe el restaurant"
					},
					"response": [
						{
							"name": "Obtener un pais de un restaurante que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000",
										"countries"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"El restaurante con el id dado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Actualizar el pais de un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/{{country_id2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"countries",
								"{{country_id2}}"
							]
						},
						"description": "Permite módificar el país asociado a un restaurant. Se retorna el código de respuesta 200 indicando la actualización satisfactoria"
					},
					"response": [
						{
							"name": "Actualizar el pais de un restaurant",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/{{country_id2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"countries",
										"{{country_id2}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": \"db3aa29e-edbd-4bd7-a648-a93f379c0d6d\",\r\n    \"name\": \"Cenador de Amós\",\r\n    \"city\": \"Cantabria\",\r\n    \"country\": {\r\n        \"id\": \"0ba682ca-5361-4448-bf6b-7fb0f410f33a\",\r\n        \"name\": \"Japon\"\r\n    }\r\n}"
						}
					]
				},
				{
					"name": "Actualizar con un pais que no existe el restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El país con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"countries",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "El restaurant existe en el sistema. El pais no existe en el sistema. Se envia una solicitud para relacionar un país que no existe con el restaurant. Se retorna el código de respuesta 404 indicando que no existe el país"
					},
					"response": [
						{
							"name": "Actualizar con un pais que no existe el restaurant",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"countries"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"EL pais con el id dado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Actualizar el pais a un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{pais_id_2}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/countries/{{country_id2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000",
								"countries",
								"{{country_id2}}"
							]
						},
						"description": "StartFragment\n\nEl restaurant no existe en el sistema. El pais si existe en el sistema. Se envia una solicitud para relacionar un país que existe con el restaurant que no existe. Se retorna el código de respuesta 404 indicando que no existe el restaurant\n\nEndFragment"
					},
					"response": [
						{
							"name": "Actualizar el pais a un restaurant que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{pais_id_2}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/countries/{{country_id2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000",
										"countries",
										"{{country_id2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El restaurante con el id dado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Crear restaurante Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"restaurant_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Cantabria\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants"
							]
						},
						"description": "Permite la creación de un restaurant. Se recibe el nombre y la ciudad del restaurant. Una vez creado el restaurant, se retorna el ID del restaurant creado, el nombre y la ciudad"
					},
					"response": [
						{
							"name": "Crear restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"name\": \"Cenador de Amós\",\r\n   \"city\": \"Cantabria\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/restaurants",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"name\": \"Cenador de Amós\",\n    \"city\": \"Cantabria\",\n    \"id\": \"315ace12-30b0-4e4b-852b-cf35dc9b5a98\"\n}"
						}
					]
				},
				{
					"name": "Crear un pais Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"country_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"España\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						},
						"description": "Esta petición crea un nuevo pais."
					},
					"response": [
						{
							"name": "Crear un pais",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"España\"\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"España\"\n}"
						}
					]
				},
				{
					"name": "Agregar un pais a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/{{country_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"countries",
								"{{country_id}}"
							]
						},
						"description": "Permite asociar un pais a un restaurant. Es importante tener presente que un restaurant solo se encuentra en un país. Se retorna el código de respuesta 200 para indicar la asociación satisfactoria entre el pais y el restaurant"
					},
					"response": [
						{
							"name": "Agregar un pais a un restaurante",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/{{country_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"countries",
										"{{country_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": \"1\",\r\n    \"nombre\": \"Cenador de Amós\",\r\n    \"ciudad\": \"Cantabria\",\r\n    \"pais\": {\r\n        \"id\":1,\r\n        \"nombre\": \"España\"\r\n    },\r\n    \"estrellas\": [\r\n        {\r\n            \"id\": \"1\",\r\n            \"fechaConsecucion\": \"1995-08-24\"\r\n        },\r\n        {\r\n            \"id\": \"2\",\r\n            \"fechaConsecucion\": \"2022-03-02\"\r\n        }\r\n    ],\r\n    \"culturas\": [\r\n        {\r\n            \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\r\n            \"nombre\": \"Mediterranea\",\r\n            \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\"\r\n        }\r\n    ]\r\n}"
						}
					]
				},
				{
					"name": "Borrar un pais de un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/{{country_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"countries",
								"{{country_id}}"
							]
						},
						"description": "Permite eliminar el pais del restaurant. Esta acción deja al restaurant sin país, por lo que debe tener especial cuidado. Se retorna el código de respuesta 204 para indicar que el país fue eliminado del restaurant satisfactoriamente"
					},
					"response": [
						{
							"name": "Borrar un pais de un restaurant",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/{{country_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"countries",
										"{{country_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un pais de un restaurante que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/countries/{{country_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"00000000-0000-0000-0000-000000000000",
								"countries",
								"{{country_id}}"
							]
						},
						"description": "StartFragment\n\nEl restaurant no existe en el sistema. El pais si existe en el sistema. Se envia una solicitud para quitar un país de un restaurant que no existe. Se retorna el código de respuesta 404 indicando que no existe el restaurant\n\nEndFragment"
					},
					"response": [
						{
							"name": "Borrar un pais de un restaurant que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/00000000-0000-0000-0000-000000000000/countries/{{country_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"00000000-0000-0000-0000-000000000000",
										"countries",
										"{{country_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El restaurante con el id dado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Borrar un pais que no existe de un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El país con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"countries",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "StartFragment\n\nEl restaurant existe en el sistema. El pais no existe en el sistema. Se envia una solicitud para eliminar un país que no existe del restaurant. Se retorna el código de respuesta 404 indicando que no existe el país\n\nEndFragment"
					},
					"response": [
						{
							"name": "Borrar un pais que no existe de un restaurant",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"countries",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El país con el id dado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Borrar un pais que no esta asociado a un restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"   pm.response.to.have.status(412);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El restaurante no tiene una asociación con el pais dado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/{{country_id2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurants",
								"{{restaurant_id}}",
								"countries",
								"{{country_id2}}"
							]
						},
						"description": "StartFragment\n\nEl restaurant existe en el sistema. El pais existe en el sistema, pero el restaurant no tiene registrado ese país. Se retorna el código de respuesta 412 indicando que no existe relación trele el el país y el restaurant indicado\n\nEndFragment"
					},
					"response": [
						{
							"name": "Borrar un pais que no esta asociado a un restaurant",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/restaurants/{{restaurant_id}}/countries/{{country_id2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"restaurants",
										"{{restaurant_id}}",
										"countries",
										"{{country_id2}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n   \"statusCode\": 412,\r\n   \"message\": \"El restaurante no tiene una asociación con el pais dado\"\r\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Productos",
			"item": [
				{
					"name": "Agregar un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.collectionVariables.set(\"product_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"wasabi\",\r\n    \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado\",\r\n    \"historia\": \"El wasabi es originario de la cultura asiática\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un producto",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"wasabi\",\r\n    \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado\",\r\n    \"historia\": \"El wasabi es originario de la cultura asiática\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"wasabi\",\n    \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado\",\n    \"historia\": \"El wasabi es originario de la cultura asiática\"\n}"
						}
					]
				},
				{
					"name": "Obtener todos los productos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of products > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todos los productos",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n        \"nombre\": \"wasabi\",\n        \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado\",\n        \"historia\": \"El wasabi es originario de la cultura asiática\"\n    },\n    {\n        \"id\": \"ab9g0c39-e498-4244-8967-6cb96f7ed50f\",\n        \"nombre\": \"pasta\",\n        \"descripcion\": \"La pasta es un conjunto de alimentos preparados con una masa cuyo ingrediente básico es la sémola, mezclada con agua, y a la cual se puede añadir sal, huevo u otros ingredientes, conformando un producto que generalmente se cuece en agua hirviendo.\",\n        \"historia\": \"La pasta es originaria de la cultura italiana\"\n    }\n]"
						}
					]
				},
				{
					"name": "Obtener un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un producto",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"wasabi\",\n    \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado\",\n    \"historia\": \"El wasabi es originario de la cultura asiática\"\n}"
						}
					]
				},
				{
					"name": "Obtener un producto que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un producto que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El producto con el id dado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Actualizar un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"wasabi\",\r\n    \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado (nuevo)\",\r\n    \"historia\": \"El wasabi es originario de la cultura asiática (nuevo)\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/products/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{product_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar un producto",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"wasabi\",\r\n    \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado\",\r\n    \"historia\": \"El wasabi es originario de la cultura asiática\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"wasabi\",\n    \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado (nuevo)\",\n    \"historia\": \"El wasabi es originario de la cultura asiática (nuevo)\"\n}"
						}
					]
				},
				{
					"name": "Actualizar un producto que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"wasabi\",\r\n    \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado (nuevo)\",\r\n    \"historia\": \"El wasabi es originario de la cultura asiática (nuevo)\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar un producto que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"wasabi\",\r\n    \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado\",\r\n    \"historia\": \"El wasabi es originario de la cultura asiática\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El producto con el id dado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Borrar un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/productos/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"productos",
								"{{product_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar un producto",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/{{product_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"{{product_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un producto que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Borrar un producto que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El producto con el id dado no fue encontrado\"\r\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Categorias",
			"item": [
				{
					"name": "Agregar una categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.collectionVariables.set(\"category_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"condimentos\" \r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": [
						{
							"name": "Agregar una categoría",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"nombre\": \"condimentos\" \r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\r\n    \"nombre\": \"condimentos\"\r\n}"
						}
					]
				},
				{
					"name": "Obtener todas las categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of categories > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todas las categorias",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n        \"nombre\": \"condimentos\"\n    },\n    {\n        \"id\": \"ab9g0c39-e498-4244-8967-6cb96f7ed50f\",\n        \"nombre\": \"verduras\"\n    }\n]"
						}
					]
				},
				{
					"name": "Obtener una categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categories/{{category_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una categoria",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"condimentos\"\n}"
						}
					]
				},
				{
					"name": "Obtener una categoría que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La categoria con el id dado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categories/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una categoría que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La categoria con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualizar una categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"condimentos (new)\" \r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/categories/{{category_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una categoría",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"nombre\": \"condimentos (new)\" \r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\r\n    \"nombre\": \"condimentos (new)\"\r\n}"
						}
					]
				},
				{
					"name": "Actualizar una categoría que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La categoria con el id dado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"nombre\": \"condimentos (new)\" \r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/categories/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una categoría que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"nombre\": \"condimentos (new)\" \r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/categories/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La categoria con el id dado no fue encontrada\"\r\n}"
						}
					]
				},
				{
					"name": "Borrar una categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categories/{{category_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories",
								"{{category_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar una categoría",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/{{category_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"{{category_id}}"
									]
								}
							},
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar una categoría que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La categoria con el id dado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categories/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categories",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Borrar una categoría que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/categories/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La categoria con el id dado no fue encontrada\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Productos-Categorías",
			"item": [
				{
					"name": "Obtener la categoría de un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/{{product_id}}/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{product_id}}",
								"category"
							]
						}
					},
					"response": [
						{
							"name": "Obtener la categoría de un producto",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/{{product_id}}/category",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"{{product_id}}",
										"category"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\r\n    \"nombre\": \"condimentos\"\r\n}"
						}
					]
				},
				{
					"name": "Obtener la categoría de un producto no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000/category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"00000000-0000-0000-0000-000000000000",
								"category"
							]
						}
					},
					"response": [
						{
							"name": "Obtener la categoría de un producto no existente",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/{{product_id}}/category",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"{{product_id}}",
										"category"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El producto con el id dado no fue encontrado\"\r\n}"
						}
					]
				},
				{
					"name": "Agregar categoría a un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/products/{{product_id}}/category/{{category_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{product_id}}",
								"category",
								"{{category_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar categoría a un producto",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/products/{{product_id}}/category/{{category_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"{{product_id}}",
										"category",
										"{{category_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\r\n    \"nombre\": \"wasabi\",\r\n    \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado\",\r\n    \"historia\": \"El wasabi es originario de la cultura asiática\",\r\n    \"categoria\": \"condimentos\"\r\n}"
						}
					]
				},
				{
					"name": "Agregar categoría no existente a un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"La categoria con el id dado no fue encontrada\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/products/{{product_id}}/category/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"{{product_id}}",
								"category",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Agregar categoría no existente a un producto",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/products/{{product_id}}/category/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"{{product_id}}",
										"category",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La categoria con el id dado no fue encontrada\"\r\n}"
						}
					]
				},
				{
					"name": "Agregar categoría a un producto no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"El producto con el id dado no fue encontrado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000/category/{{category_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"00000000-0000-0000-0000-000000000000",
								"category",
								"{{category_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar categoría no existente a un producto",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/products/00000000-0000-0000-0000-000000000000/category/{{category_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"00000000-0000-0000-0000-000000000000",
										"category",
										"{{category_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El producto con el id dado no fue encontrado\"\r\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Paises",
			"item": [
				{
					"name": "Crear un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"country_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"Japon\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						},
						"description": "Esta petición crea un nuevo pais."
					},
					"response": [
						{
							"name": "Crear un pais 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"España\"\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"España\"\n}"
						}
					]
				},
				{
					"name": "Crear un pais 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"country_id2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"Japon\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						},
						"description": "Esta petición crea un nuevo pais."
					},
					"response": [
						{
							"name": "Crear un pais 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"Japon\"\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"España\"\n}"
						}
					]
				},
				{
					"name": "Obtener todos los paises",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of countries > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						},
						"description": "Obtiene todos los paises."
					},
					"response": [
						{
							"name": "Obtener todos los paises",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n        \"nombre\": \"España\"\n    },\n    {\n        \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"nombre\": \"Grecia\"\n    }\n]"
						}
					]
				},
				{
					"name": "Obtener un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/countries/{{country_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"{{country_id}}"
							]
						},
						"description": "Obtiene un pais de acuerdo a su id."
					},
					"response": [
						{
							"name": "Obtener un pais",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/{{country_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										"{{country_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"España\"\n}"
						}
					]
				},
				{
					"name": "Obtener un pais que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El país con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/countries/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Esta petición retorna un error al intentar consultar un pais que no existe."
					},
					"response": [
						{
							"name": "Obtener un pais que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El pais con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Borrar un pais que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El país con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/countries/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Esta petición retorna un error al intentar eliminar un pais que no existe."
					},
					"response": [
						{
							"name": "Borrar un pais que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El pais con el id dado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Borrar un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/countries/{{country_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"{{country_id}}"
							]
						},
						"description": "Esta petición borra un pais."
					},
					"response": [
						{
							"name": "Borrar un pais",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/{{country_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										"{{country_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un pais 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/countries/{{country_id2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"{{country_id2}}"
							]
						},
						"description": "Esta petición borra un pais."
					},
					"response": [
						{
							"name": "Borrar un pais 2",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/{{country_id2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										"{{country_id2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Permite crear nuevos paises, las cuturas gastronomicas pueden tener asociados varios paises y los restaurantes pueden tener asociado 1 país solamente.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Recetas",
			"item": [
				{
					"name": "Obtener todas las recetas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recipes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recipes"
							]
						},
						"description": "Regresa el listado de restaurantes guardados. Por cada uno de los restaurantes retorna id, nombre, descripcion, fotoURI, videoURI y procesoPreparación"
					},
					"response": [
						{
							"name": "Obtener todas las recetas",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recetas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"nombre\": \"Arroz con pollo\",\r\n        \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, salchicha y tocineta.\",\r\n        \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\r\n        \"videoUri\": \"\",\r\n        \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\",\r\n        \"cultura\": {\r\n            \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\r\n            \"nombre\": \"Mediterranea\",\r\n            \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\"\r\n        }\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"nombre\": \"Pastel de garbanzo\",\r\n        \"descripcion\": \"Excelente pastel, horneado o frito, relleno de masa de garbanzo\",\r\n        \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\r\n        \"videoUri\": \"\",\r\n        \"procesoPreparacion\": \"1. Cocinas el garbanzo, 2. Preparas la masa, 3. Haces el pastel, 4. Cocinas el pastel.\",\r\n        \"cultura\": {\r\n            \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\r\n            \"nombre\": \"Mediterranea\",\r\n            \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\"\r\n        }\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "Obtener una receta",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una receta",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": 2,\r\n    \"nombre\": \"Pastel de garbanzo\",\r\n    \"descripcion\": \"Excelente pastel, horneado o frito, relleno de masa de garbanzo\",\r\n    \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\r\n    \"videoUri\": \"\",\r\n    \"procesoPreparacion\": \"1. Cocinas el garbanzo, 2. Preparas la masa, 3. Haces el pastel, 4. Cocinas el pastel.\",\r\n    \"cultura\": {\r\n        \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\r\n        \"nombre\": \"Mediterranea\",\r\n        \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\"\r\n    }\r\n}"
						}
					]
				},
				{
					"name": "Obtener receta que no existe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recetas/jkbhjkbkhjbjh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recetas",
								"jkbhjkbkhjbjh"
							]
						},
						"description": "Esta petición retorna un error debido a que no encuentra la receta que se busca."
					},
					"response": [
						{
							"name": "Obtener receta que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recetas/jkbhjkbkhjbjh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"jkbhjkbkhjbjh"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La receta con el id dado no fue encontrada\"\r\n}"
						}
					]
				},
				{
					"name": "Crear una receta",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Arroz con pollo\",\r\n    \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, salchicha y tocineta.\",\r\n    \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\r\n    \"videoUri\": \"\",\r\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recetas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recetas"
							]
						},
						"description": "Crea una receta a partir de la información recibida en el body de la petición."
					},
					"response": [
						{
							"name": "Crear una receta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Arroz con pollo\",\r\n    \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, salchicha y tocineta.\",\r\n    \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\r\n    \"videoUri\": \"\",\r\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recetas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"nombre\": \"Arroz con pollo\",\n    \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, salchicha y tocineta.\",\n    \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\n    \"videoUri\": \"\",\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\"\n}"
						}
					]
				},
				{
					"name": "Crear una receta sin un campo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Arroz con pollo\",\r\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recetas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recetas"
							]
						},
						"description": "Retorna error la petición debido a que hace falta un campo en el body para la creación de la receta."
					},
					"response": [
						{
							"name": "Crear una receta sin un campo",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Arroz con pollo\",\r\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recetas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n   \"statusCode\": 412,\r\n   \"message\": \"Uno de los parametros hace falta en la petición\"\r\n}"
						}
					]
				},
				{
					"name": "Actualizar una receta",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Arroz con pollo\",\r\n    \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, zanahoria, salchicha y tocineta.\",\r\n    \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\r\n    \"videoUri\": \"\",\r\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						},
						"description": "Actualiza una receta con la información recibida en el body de la petición."
					},
					"response": [
						{
							"name": "Actualizar una receta",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Arroz con pollo\",\r\n    \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, zanahoria, salchicha y tocineta.\",\r\n    \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\r\n    \"videoUri\": \"\",\r\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"nombre\": \"Arroz con pollo\",\n    \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, zanahoria, salchicha y tocineta.\",\n    \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\n    \"videoUri\": \"\",\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\"\n}"
						}
					]
				},
				{
					"name": "Actualizar una receta que no existe",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Arroz con pollo\",\r\n    \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, zanahoria, salchicha y tocineta.\",\r\n    \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\r\n    \"videoUri\": \"\",\r\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						},
						"description": "Retorna error debido a que no encuentra la receta que se desea actualizar."
					},
					"response": [
						{
							"name": "Actualizar una receta que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Arroz con pollo\",\r\n    \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, zanahoria, salchicha y tocineta.\",\r\n    \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\r\n    \"videoUri\": \"\",\r\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La receta con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Borrar una receta",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						},
						"description": "Elimina la receta con el id dado."
					},
					"response": [
						{
							"name": "Borrar una receta",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/receta/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"receta",
										"{{receta_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar una receta que no existe",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"recetas",
								"{{receta_id}}"
							]
						},
						"description": "Retorna error debido a que no encuentra la receta que se desea eliminar."
					},
					"response": [
						{
							"name": "Borrar una receta que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La receta con el id dado no fue encontrada\"\n}"
						}
					]
				}
			],
			"description": "Son las recetas que puede tener una cultura gastrónomica.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Culturas",
			"item": [
				{
					"name": "Crear una cultura sin un parametro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"La gastronomía de Francia está caracterizada por su variedad, fruto de la diversidad regional francesa, tanto cultural como de materias primas, pero también por su refinamiento.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures"
							]
						},
						"description": "Esta petición retorna un error al estar incompleta la petición."
					},
					"response": [
						{
							"name": "Crear una cultura sin un parametro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"La gastronomía de Francia está caracterizada por su variedad, fruto de la diversidad regional francesa, tanto cultural como de materias primas, pero también por su refinamiento.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cultures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 412,\n    \"message\": \"Uno de los parametros hace falta en la petición\"\n}"
						}
					]
				},
				{
					"name": "Crear una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"culture_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"francesa\",\n    \"description\": \"La gastronomía de Francia está caracterizada por su variedad, fruto de la diversidad regional francesa, tanto cultural como de materias primas, pero también por su refinamiento.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures"
							]
						},
						"description": "Esta petición crea una nueva cultura."
					},
					"response": [
						{
							"name": "Crear una cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"francesa\",\n    \"description\": \"La gastronomía de Francia está caracterizada por su variedad, fruto de la diversidad regional francesa, tanto cultural como de materias primas, pero también por su refinamiento.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cultures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"nombre\": \"francesa\",\n    \"descripcion\": \"La gastronomía de Francia está caracterizada por su variedad, fruto de la diversidad regional francesa, tanto cultural como de materias primas, pero también por su refinamiento.\"\n}"
						}
					]
				},
				{
					"name": "Crear una cultura 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"culture_id2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Gastronomía de Asia\",\n    \"description\": \"corresponde a un conjunto de gastronomías asociadas a los países y etnias de Asia. Casi siempre se emplea el término generalizando tanto a las gastronomías del Este de Asia como a las del Sureste Asiático. Tiene como principal vía de influencia (y de comunicación entre ellas) tanto el Océano Índico como el Océano Pacífico.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures"
							]
						},
						"description": "Esta petición crea una nueva cultura."
					},
					"response": [
						{
							"name": "Crear una cultura 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Gastronomía de Asia\",\n    \"description\": \"corresponde a un conjunto de gastronomías asociadas a los países y etnias de Asia. Casi siempre se emplea el término generalizando tanto a las gastronomías del Este de Asia como a las del Sureste Asiático. Tiene como principal vía de influencia (y de comunicación entre ellas) tanto el Océano Índico como el Océano Pacífico.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cultures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"nombre\": \"francesa\",\n    \"descripcion\": \"La gastronomía de Francia está caracterizada por su variedad, fruto de la diversidad regional francesa, tanto cultural como de materias primas, pero también por su refinamiento.\"\n}"
						}
					]
				},
				{
					"name": "Obtener todas las culturas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of cultures > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cultures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures"
							]
						},
						"description": "Esta petición retorna todas las culturas."
					},
					"response": [
						{
							"name": "Obtener todas las culturas",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cultures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n        \"nombre\": \"Mediterranea\",\n        \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\"\n    },\n    {\n        \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"nombre\": \"Italiana\",\n        \"descripcion\": \"Si tratamos de imaginarnos la cultura gastronímica italiana, la mayoría de la gente va a pensar en pasta o pizza, espagueti o salchichas. Pero como la mayoría de las tierras antiguas y con una larga historia, Italia tiene una cocina muy variada. Las variaciones regionales no se aprecian en ninguna parte de una forma tan brusca como la diferencia que existe entre la cocina del norte y la cocina del sur de Italia.\"\n    }\n]"
						}
					]
				},
				{
					"name": "Obtener una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{culture_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}"
							]
						},
						"description": "Esta petición retorna una cultura dependiendo del id, la representación de la cultura es detallada por lo que incluye las recetas, restaurantes, paises y productos."
					},
					"response": [
						{
							"name": "Obtener una cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cultures/{{culture_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"Mediterranea\",\n    \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\",\n    \"restaurantes\": [\n        {\n            \"id\": \"28a6bcd5-7f74-4d31-ac70-456d0c520544\",\n            \"nombre\": \"Casa angela\",\n            \"ciudad\": \"Barcelona\"\n        }\n    ],\n    \"paises\": [\n        {\n            \"id\": \"7e265679-3a85-416d-afca-80fd04e2b79c\",\n            \"nombre\": \"España\"\n        }\n    ],\n    \"productos\": [\n        {\n            \"id\": \"00519f14-2cd5-4a21-810d-39b06319bb54\",\n            \"nombre\": \"Aceite de oliva\",\n            \"descripcion\": \"El aceite de oliva es un aceite vegetal de uso principalmente culinario. Se obtiene del fruto del olivo (Olea europaea), denominado oliva o aceituna\",\n            \"historia\": \"Los aceites vegetales se han empleado en la historia de forma habitual. Se ha empleado en la gastronomía, aunque también se le han dado otros usos como los religiosos, la cosmética y como combustible en la iluminación para las lámparas de aceite de la vida diaria y en los templos.\"\n        }\n    ],\n    \"recetas\": [\n        {\n            \"id\": \"c3039d8c-baaf-45f3-96de-7277936a374d\",\n            \"nombre\": \"Paella\",\n            \"descripcion\": \"La paella, o también arroz a la paella,​ (del valenciano paella, que significa 'sartén' y se refiere al recipiente con el que se hace la receta y que le da nombre, y este a su vez del latín patella)​ es una receta de cocina con base de arroz, con origen en la actual Comunidad Valenciana, hoy en día muy popular en toda España y servida en restaurantes de todo el mundo\",\n            \"fotoURI\": \"culturasgastronomicas.com/imagen/paella\",\n            \"videoURI\": \"culturasgastronomicas.com/video/paella\",\n            \"preparacion\": \"Paso 1: Se prepara el arroz.\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Obtener una culrtura que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La cultura con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Esta petición retorna un error al no encontrar la cultura."
					},
					"response": [
						{
							"name": "Obtener una culrtura que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Actualizar una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Mediterranea\",\n    \"description\": \" A pesar de la enorme diversidad de particularidades regionales, esta región tiene también muchas características comunes, determinadas por el clima mediterráneo, la agricultura y los lazos históricos y comerciales. Además, a lo largo de la historia numerosos alimentos se han aclimatado y naturalizado en el Mediterráneo, por lo que esta cocina tiene una gran capacidad de mestizaje.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures/{{culture_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}"
							]
						},
						"description": "Esta petición actualiza una cultura existente."
					},
					"response": [
						{
							"name": "Actualizar una cultura",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Mediterranea\",\n    \"description\": \" A pesar de la enorme diversidad de particularidades regionales, esta región tiene también muchas características comunes, determinadas por el clima mediterráneo, la agricultura y los lazos históricos y comerciales. Además, a lo largo de la historia numerosos alimentos se han aclimatado y naturalizado en el Mediterráneo, por lo que esta cocina tiene una gran capacidad de mestizaje.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cultures/{{culture_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"nombre\": \"francesa\",\n    \"descripcion\": \"La gastronomía de Francia está caracterizada por su variedad, fruto de la diversidad regional francesa, tanto cultural como de materias primas, pero también por su refinamiento.\"\n}"
						}
					]
				},
				{
					"name": "Actualizar una cultura que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La cultura con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Mediterranea\",\n    \"description\": \" A pesar de la enorme diversidad de particularidades regionales, esta región tiene también muchas características comunes, determinadas por el clima mediterráneo, la agricultura y los lazos históricos y comerciales. Además, a lo largo de la historia numerosos alimentos se han aclimatado y naturalizado en el Mediterráneo, por lo que esta cocina tiene una gran capacidad de mestizaje.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Esta petición retorna un error al intentar actualizar una cultura que no existe."
					},
					"response": [
						{
							"name": "Actualizar una cultura que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Mediterranea\",\n    \"description\": \" A pesar de la enorme diversidad de particularidades regionales, esta región tiene también muchas características comunes, determinadas por el clima mediterráneo, la agricultura y los lazos históricos y comerciales. Además, a lo largo de la historia numerosos alimentos se han aclimatado y naturalizado en el Mediterráneo, por lo que esta cocina tiene una gran capacidad de mestizaje.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Borrar una cultura que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La cultura con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Esta petición retorna un error al intentar borrar una cultura que no existe."
					},
					"response": [
						{
							"name": "Borrar una cultura que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Borrar una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{culture_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}"
							]
						},
						"description": "Esta petición borra una cultura."
					},
					"response": [
						{
							"name": "Borrar una cultura",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cultures/{{culture_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar una cultura 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{culture_id2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{culture_id2}}"
							]
						},
						"description": "Esta petición borra una cultura."
					},
					"response": [
						{
							"name": "Borrar una cultura 2",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cultures/{{culture_id2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"{{culture_id2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Documenta las posibles peticiones del recurso culturas gastronómicas. Una cultura gastronómicas puede tener dos representaciones una básica que consta de la información mínima de una cultura y una detallada en la cual se agrega la lista de paises, recetas, productos y restaurantes.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Culturas-Paises",
			"item": [
				{
					"name": "Crear una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"culture_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"francesa\",\n    \"description\": \"La gastronomía de Francia está caracterizada por su variedad, fruto de la diversidad regional francesa, tanto cultural como de materias primas, pero también por su refinamiento.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures"
							]
						},
						"description": "Esta petición crea una nueva cultura."
					},
					"response": [
						{
							"name": "Crear una cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"francesa\",\n    \"description\": \"La gastronomía de Francia está caracterizada por su variedad, fruto de la diversidad regional francesa, tanto cultural como de materias primas, pero también por su refinamiento.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cultures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"nombre\": \"francesa\",\n    \"descripcion\": \"La gastronomía de Francia está caracterizada por su variedad, fruto de la diversidad regional francesa, tanto cultural como de materias primas, pero también por su refinamiento.\"\n}"
						}
					]
				},
				{
					"name": "Crear un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"country_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"España\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						},
						"description": "Esta petición crea un nuevo pais."
					},
					"response": [
						{
							"name": "Crear un pais",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"España\"\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"España\"\n}"
						}
					]
				},
				{
					"name": "Crear un pais 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();",
									"pm.collectionVariables.set(\"country_id2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"Japon\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries"
							]
						},
						"description": "Esta petición crea un nuevo pais."
					},
					"response": [
						{
							"name": "Crear un pais 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"Japon\"\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"España\"\n}"
						}
					]
				},
				{
					"name": "Agregar un pais a una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures/{{culture_id}}/countries/{{country_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"countries",
								"{{country_id}}"
							]
						},
						"description": "Esta petición agrega un pais a una cultura."
					},
					"response": [
						{
							"name": "Agregar un pais a una cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cultures/{{culture_id}}/countries/{{country_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"countries",
										"{{country_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"Mediterranea\",\n    \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\",\n    \"paises\": [\n        {\n            \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n            \"nombre\": \"España\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Agregar un pais que no existe a una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El país con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures/{{culture_id}}/countries/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"countries",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Esta petición retorna un error al intentar agregar un pais que no existe a una cultura."
					},
					"response": [
						{
							"name": "Agregar un pais que no existe a una cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cultures/{{culture_id}}/countries/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"countries",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El pais con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Agregar un pais a una cultura que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La cultura con el id dado no fue encontrado\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/countries/{{country_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"00000000-0000-0000-0000-000000000000",
								"countries",
								"{{country_id}}"
							]
						},
						"description": "Esta petición retorna un error al intentar asociar un pais a una cultura que no existe."
					},
					"response": [
						{
							"name": "Agregar un pais a una cultura que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/countries/{{country_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"00000000-0000-0000-0000-000000000000",
										"countries",
										"{{country_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Obtener los paises de una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{culture_id}}/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"countries"
							]
						},
						"description": "Esta petición retorna todos los paises de una cultura."
					},
					"response": [
						{
							"name": "Obtener los paises de una cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cultures/{{culture_id}}/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"countries"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n        \"nombre\": \"España\"\n    }\n]"
						}
					]
				},
				{
					"name": "Obtener los paises de una cultura que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La cultura con el id dado no fue encontrado\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/countries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"00000000-0000-0000-0000-000000000000",
								"countries"
							]
						},
						"description": "Esta petición retorna un error al consultar los paises de una cultura que no existe."
					},
					"response": [
						{
							"name": "Obtener los paises de una cultura que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cultures/00000000-0000-0000-0000-000000000000/countries",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"00000000-0000-0000-0000-000000000000",
										"countries"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Borrar un pais de una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{culture_id}}/countries/{{country_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"countries",
								"{{country_id}}"
							]
						},
						"description": "Borra un pais de una cultura."
					},
					"response": [
						{
							"name": "Borrar un pais de una cultura",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cultures/{{culture_id}}/countries/{{country_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"countries",
										"{{country_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un pais que no esta asociado de una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"   pm.response.to.have.status(412);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El país con el id dado no está asociado a la cultura\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{culture_id}}/countries/{{country_id2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}",
								"countries",
								"{{country_id2}}"
							]
						},
						"description": "Esta petición retorna un error al intentar borrar un pais que no esta asociado a ninguna cultura."
					},
					"response": [
						{
							"name": "Borrar un pais que no esta asociado de una cultura",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cultures/{{culture_id}}/countries/{{country_id2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}",
										"countries",
										"{{country_id2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar una cultura",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/cultures/{{culture_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cultures",
								"{{culture_id}}"
							]
						},
						"description": "Esta petición borra una cultura."
					},
					"response": [
						{
							"name": "Borrar una cultura",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/cultures/{{culture_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cultures",
										"{{culture_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un pais",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/countries/{{country_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"{{country_id}}"
							]
						},
						"description": "Esta petición borra un pais."
					},
					"response": [
						{
							"name": "Borrar un pais",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/{{country_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										"{{country_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un pais 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/countries/{{country_id2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"countries",
								"{{country_id2}}"
							]
						},
						"description": "Esta petición borra un pais."
					},
					"response": [
						{
							"name": "Borrar un pais 2",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/countries/{{country_id2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"countries",
										"{{country_id2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Permite asociar paises a una cultura. Las culturas pueen tener varios paises asociados.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Culturas-Productos",
			"item": [
				{
					"name": "Obtener todos los productos de una cultura",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/productos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"productos"
							]
						},
						"description": "Retorna todos los productos asociados a una cultura."
					},
					"response": [
						{
							"name": "Obtener todos los productos de una cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n        \"nombre\": \"wasabi\",\n        \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado\",\n        \"historia\": \"El wasabi es originario de la cultura asiática\"\n    },\n    {\n        \"id\": \"ab9g0c39-e498-4244-8967-6cb96f7ed50f\",\n        \"nombre\": \"pasta\",\n        \"descripcion\": \"La pasta es un conjunto de alimentos preparados con una masa cuyo ingrediente básico es la sémola, mezclada con agua, y a la cual se puede añadir sal, huevo u otros ingredientes, conformando un producto que generalmente se cuece en agua hirviendo.\",\n        \"historia\": \"La pasta es originaria de la cultura italiana\"\n    }\n]"
						}
					]
				},
				{
					"name": "Obtener un producto de una cultura",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/productos/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"productos",
								"{{product_id}}"
							]
						},
						"description": "Obtiene un producto especifico de una cultura."
					},
					"response": [
						{
							"name": "Obtener un producto de una cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/{{producto_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"{{producto_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"ab9g0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"pasta\",\n    \"descripcion\": \"La pasta es un conjunto de alimentos preparados con una masa cuyo ingrediente básico es la sémola, mezclada con agua, y a la cual se puede añadir sal, huevo u otros ingredientes, conformando un producto que generalmente se cuece en agua hirviendo.\",\n    \"historia\": \"La pasta es originaria de la cultura italiana\"\n}"
						}
					]
				},
				{
					"name": "Obtener un producto que no existe",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/productos/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"productos",
								"{{product_id}}"
							]
						},
						"description": "Esta petición retorna un error al intentar obtener un producto que no existe."
					},
					"response": [
						{
							"name": "Obtener un producto que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/{{producto_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"{{producto_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El producto con el id dado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Agregar producto a una cultura que no existe",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/productos/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"00000000-0000-0000-0000-000000000000",
								"productos",
								"{{product_id}}"
							]
						},
						"description": "Esta petición retorna un error al intentar agregar un producto a una cultura que no existe."
					},
					"response": [
						{
							"name": "Agregar producto a una cultura que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/productos/{{producto_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"productos",
										"{{producto_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Agregar producto que no existe a una cultura",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/productos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Esta petición retorna un error al intentar agregar un producto que no existe a una cultura."
					},
					"response": [
						{
							"name": "Agregar producto que no existe a una cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El producto con el id dado no fue encontrado\"\n}"
						}
					]
				},
				{
					"name": "Agregar producto a una cultura",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/productos/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"productos",
								"{{product_id}}"
							]
						},
						"description": "Agrega un producto a una cultura."
					},
					"response": [
						{
							"name": "Agregar producto a una cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/{{producto_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"{{producto_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"nombre\": \"Mediterranea\",\n    \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\",\n    \"productos\": [\n        {\n            \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n            \"nombre\": \"wasabi\",\n            \"descripcion\": \"Especia o condimento picante usado a menudo en sushi y otros platos con pescado\",\n            \"historia\": \"El wasabi es originario de la cultura asiática\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Borrar un producto de una cultura",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/productos/{{product_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"productos",
								"{{product_id}}"
							]
						},
						"description": "Borra un producto de una cultura."
					},
					"response": [
						{
							"name": "Borrar un producto de una cultura",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/{{producto_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"{{producto_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Borrar un producto que no existe de una cultura",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/productos/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"productos",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Esta petición retorna un error al intentar eliminar un producto que no existe."
					},
					"response": [
						{
							"name": "Borrar un producto que no existe de una cultura",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/productos/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"productos",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El producto con el id dado no fue encontrado\"\n}"
						}
					]
				}
			],
			"description": "Permite asociar productos a una cultura. Las culturas pueen tener varios productos asociados.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Culturas-Restaurantes",
			"item": [
				{
					"name": "Agregar un restaurante a una cultura",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/restaurantes/{{restaurant_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"restaurantes",
								"{{restaurant_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un restaurante a una cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/restaurantes/{{restaurante_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"restaurantes",
										"{{restaurante_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"nombre\": \"Mediterranea\",\n    \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\",\n    \"restaurantes\": [\n        {\n            \"id\": \"28a6bcd5-7f74-4d31-ac70-456d0c520544\",\n            \"nombre\": \"Casa angela\",\n            \"ciudad\": \"Barcelona\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Agregar un restaurante a una cultura que no existe",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/restaurantes/{{restaurant_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"00000000-0000-0000-0000-000000000000",
								"restaurantes",
								"{{restaurant_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un restaurante a una cultura que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/00000000-0000-0000-0000-000000000000/restaurantes/{{restaurante_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"00000000-0000-0000-0000-000000000000",
										"restaurantes",
										"{{restaurante_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Agregar un restaurante que no existe a una cultura",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/restaurantes/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"restaurantes",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un restaurante que no existe a una cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/restaurantes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"restaurantes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Obtener un restaurante de una cultura",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/restaurantes/{{restaurant_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"restaurantes",
								"{{restaurant_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un restaurante de una cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/restaurantes/{{restaurante_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"restaurantes",
										"{{restaurante_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"28a6bcd5-7f74-4d31-ac70-456d0c520544\",\n    \"nombre\": \"Casa angela\",\n    \"ciudad\": \"Barcelona\"\n}"
						}
					]
				},
				{
					"name": "Obtener un restaurante que no esta asociado a una cultura",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{culture_id}}/restaurantes/{{restaurant_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{culture_id}}",
								"restaurantes",
								"{{restaurant_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un restaurante que no esta asociado a una cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/restaurantes/{{restaurante_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"restaurantes",
										"{{restaurante_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 412,\n    \"message\": \"El restaurante no esta asociado a la cultura\"\n}"
						}
					]
				},
				{
					"name": "Obtener los restaurantes de una cultura",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{cultura_id}}/restaurantes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{cultura_id}}",
								"restaurantes"
							]
						}
					},
					"response": [
						{
							"name": "Obtener los restaurantes de una cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/restaurantes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"restaurantes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"28a6bcd5-7f74-4d31-ac70-456d0c520544\",\n        \"nombre\": \"Casa angela\",\n        \"ciudad\": \"Barcelona\"\n    }\n]"
						}
					]
				},
				{
					"name": "Borrar un restaurante de una cultura",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{cultura_id}}/restaurantes/{{restaurante_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{cultura_id}}",
								"restaurantes",
								"{{restaurante_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Borrar un restaurante de una cultura",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/restaurantes/{{restaurante_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"restaurantes",
										"{{restaurante_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Permite asociar restaurantes a una cultura. Las culturas pueen tener varios restaurantes asociados.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Cultura-Receta",
			"item": [
				{
					"name": "Agregar una receta a una cultura",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{cultura_id}}",
								"recetas",
								"{{receta_id}}"
							]
						},
						"description": "Asocia una receta existente con una cultura existente."
					},
					"response": [
						{
							"name": "Agregar una receta a una cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n    \"nombre\": \"Mediterranea\",\n    \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\",\n    \"recetas\": [\n        {\n            \"id\": 1,\n            \"nombre\": \"Arroz con pollo\",\n            \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, salchicha y tocineta.\",\n            \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\n            \"videoUri\": \"\",\n            \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\",\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Agregar una receta que no existe a una cultura",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/00000-000000-0000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{cultura_id}}",
								"recetas",
								"00000-000000-0000000"
							]
						},
						"description": "Retorna error debido a que no encuentra la receta que desea agregar a la cultura."
					},
					"response": [
						{
							"name": "Agregar una receta que no existe a una cultura",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/00000-000000-0000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"00000-000000-0000000"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La cultura con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Agregar una receta a una cultura que no existe",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/000000-0000000-00000000/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"000000-0000000-00000000",
								"recetas",
								"{{receta_id}}"
							]
						},
						"description": "Retorna error debido a que no encuentra la cultura a la que se desea agregar la receta."
					},
					"response": [
						{
							"name": "Agregar una receta a una cultura que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/000000-0000000-00000000/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"000000-0000000-00000000",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 404,\n    \"message\": \"La receta con el id dado no fue encontrada\"\n}"
						}
					]
				},
				{
					"name": "Obtener una receta de una cultura",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{cultura_id}}",
								"recetas",
								"{{receta_id}}"
							]
						},
						"description": "Retorna la receta de la cultura dado los ids brindados."
					},
					"response": [
						{
							"name": "Obtener una receta de una cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"id\": 1,\r\n    \"nombre\": \"Arroz con pollo\",\r\n    \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, salchicha y tocineta.\",\r\n    \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\r\n    \"videoUri\": \"\",\r\n    \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\",\r\n}"
						}
					]
				},
				{
					"name": "Obtener las recetas de una cultura",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{cultura_id}}",
								"recetas"
							]
						},
						"description": "Retorna el listado de recetas de una cultura dado su id."
					},
					"response": [
						{
							"name": "Obtener las recetas de una cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"nombre\": \"Arroz con pollo\",\n        \"descripcion\": \"Es un excelente arroz mezclado con pollo, arberja, salchicha y tocineta.\",\n        \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\n        \"videoUri\": \"\",\n        \"procesoPreparacion\": \"1. Cocinas el arroz, 2. Cocinas el pollo, 3. Combinas todo junto\",\n        \"cultura\": {\n            \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n            \"nombre\": \"Mediterranea\",\n            \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\"\n        }\n    },\n    {\n        \"id\": 2,\n        \"nombre\": \"Pastel de garbanzo\",\n        \"descripcion\": \"Excelente pastel, horneado o frito, relleno de masa de garbanzo\",\n        \"fotoUri\": \"https://www.google.com/search?q=arroz+con+pollo&rlz=1C1ONGR_esCO982CO982&sxsrf=ALiCzsZGMh7QNNPITh1VYHP5DGEZEooyaw:1661723202641&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiRhdWpwer5AhVaRDABHaQYD9UQ_AUoAXoECAIQAw&biw=1920&bih=979&dpr=1#imgrc=L_agh_Dvt2zJ8M\",\n        \"videoUri\": \"\",\n        \"procesoPreparacion\": \"1. Cocinas el garbanzo, 2. Preparas la masa, 3. Haces el pastel, 4. Cocinas el pastel.\",\n        \"cultura\": {\n            \"id\": \"d48e0c39-e498-4244-8967-6cb96f7ed50f\",\n            \"nombre\": \"Mediterranea\",\n            \"descripcion\": \"La esencia de la alimentación mediterránea lo constituyen los cereales, las legumbres, las frutas y las verduras.​ El pescado es consumido regularmente y la carne con moderación.\"\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "Obtener una receta que no está asociado a una cultura",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{cultura_id}}",
								"recetas",
								"{{receta_id}}"
							]
						},
						"description": "Retorna error debido a que no encuentra la receta en el listado de recetas de la cultura dada."
					},
					"response": [
						{
							"name": "Obtener una receta que no está asociado a una cultura",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"statusCode\": 412,\n    \"message\": \"La receta no esta asociada a la cultura\"\n}"
						}
					]
				},
				{
					"name": "Borrar una receta de una cultura",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"culturas",
								"{{cultura_id}}",
								"recetas",
								"{{receta_id}}"
							]
						},
						"description": "Elimina la relación entre una receta y cultura dada por los ids"
					},
					"response": [
						{
							"name": "Borrar una receta de una cultura",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/culturas/{{cultura_id}}/recetas/{{receta_id}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"culturas",
										"{{cultura_id}}",
										"recetas",
										"{{receta_id}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "category_id",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "receta_id",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "restaurant_id",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "star_id",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "star_id2",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "star_id3",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "country_id",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "country_id2",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "culture_id",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "culture_id2",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		},
		{
			"key": "token",
			"value": "abc$123",
			"type": "string"
		}
	]
}